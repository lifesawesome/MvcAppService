trigger:
  branches:
    include:
      - main  # Adjust if using a different branch

pool:
  vmImage: 'windows-latest'

variables:
  appName: 'demowebmvcservice'  # Change this to your App Service name
  resourceGroup: 'demowebappresource'
  serviceConnection: 'AzureAppServiceConnection'

steps:
  # Step 1: Restore NuGet Packages
  - task: NuGetCommand@2
    displayName: 'Restore NuGet Packages'
    inputs:
      restoreSolution: '**/*.sln'

  # Step 2: Build the Solution
  - task: VSBuild@1
    displayName: 'Build ASP.NET MVC Solution'
    inputs:
      solution: '**/*.sln'
      platform: 'Any CPU'
      configuration: 'Release'


  - script: dir $(Build.BinariesDirectory) /s
    displayName: 'List Build Output Directory'

  - script: dir $(Build.SourcesDirectory)\bin\Release /s
    displayName: 'List Build Output in Sources Directory'
    
  # Step 3: Archive Build Output to a ZIP File
  - task: ArchiveFiles@2
    displayName: 'Create ZIP Package'
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'  # Output of MSBuild
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
      replaceExistingArchive: true

  # Step 4: Publish the ZIP File as a Build Artifact
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Build Artifacts'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/app.zip'
      artifactName: 'drop'
  
  # Step 5: Download the Artifact for Deployment
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifact'
    inputs:
      buildType: 'current'
      artifactName: 'drop'
      downloadPath: '$(Pipeline.Workspace)'

  # Step 6: Deploy to Azure App Service
  - task: AzureRmWebAppDeployment@4
    displayName: 'Deploy to Azure App Service'
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: $(serviceConnection)
      appType: 'webApp'
      WebAppName: $(appName)
      package: '$(Pipeline.Workspace)/drop/app.zip'
