trigger:
  branches:
    include:
      - main  # Adjust if using a different branch

pool:
  vmImage: 'windows-latest'

variables:
  appName: 'demowebmvcservice'  # Change this to your App Service name
  resourceGroup: 'demowebappresource'
  serviceConnection: 'AzureAppServiceConnection'

steps:
  # Step 1: Restore NuGet Packages
  - task: NuGetCommand@2
    displayName: 'Restore NuGet Packages'
    inputs:
      restoreSolution: '**/*.sln'

  # Step 2: Build the Solution
  - task: VSBuild@1
    displayName: 'Build ASP.NET MVC Solution'
    inputs:
      solution: '**/*.sln'
      platform: 'Any CPU'
      configuration: 'Release'
    
  # Step 3: Archive Build Output to a ZIP File
  - task: ArchiveFiles@2
    displayName: 'Create ZIP Package'
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)'  # Automatically matches the build output folder
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Pipeline.Workspace)/drop/app.zip'
      replaceExistingArchive: true

  # Step 4: Deploy Using Run-From-Folder
  - task: AzureCLI@2
    displayName: 'Deploy Using Run-From-Folder'
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        # Ensure the ZIP file exists
        if [ ! -f "$(Pipeline.Workspace)/drop/app.zip" ]; then
          echo "ERROR: Deployment ZIP file not found."
          exit 1
        fi

        # Extract the ZIP to a temporary folder
        unzip -o $(Pipeline.Workspace)/drop/app.zip -d $(Pipeline.Workspace)/extracted

        # Deploy extracted content to the wwwroot directory
        az webapp deployment source config-zip --name $(appName) --resource-group $(resourceGroup) --src $(Pipeline.Workspace)/drop/app.zip

        # Clear WEBSITE_RUN_FROM_PACKAGE if needed
        az webapp config appsettings delete --name $(appName) --resource-group $(resourceGroup) --setting-names WEBSITE_RUN_FROM_PACKAGE

        # Restart the app to apply changes
        az webapp restart --name $(appName) --resource-group $(resourceGroup)
