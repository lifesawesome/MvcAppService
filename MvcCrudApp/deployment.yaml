trigger:
  branches:
    include:
      - main  # Adjust if using a different branch

pool:
  vmImage: 'windows-latest'

variables:
  appName: 'demowebmvcservice'  # Change this to your App Service name
  resourceGroup: 'demowebappresource'
  serviceConnection: 'AzureAppServiceConnection'

steps:
  # Step 1: Restore NuGet Packages
  - task: NuGetCommand@2
    displayName: 'Restore NuGet Packages'
    inputs:
      restoreSolution: '**/*.sln'

  # Step 2: Build the Solution
  - task: VSBuild@1
    displayName: 'Build ASP.NET MVC Solution'
    inputs:
      solution: '**/*.sln'
      platform: 'Any CPU'
      configuration: 'Release'
    
  # Step 3: Archive Build Output to a ZIP File
  - task: ArchiveFiles@2
    displayName: 'Create ZIP Package'
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)\MvcCrudApp\bin\Release\net9.0'  # Correct path
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
      replaceExistingArchive: true

  # Use Azure CLI to upload and extract the ZIP to the app's wwwroot directory

  - task: AzureCLI@2
    displayName: 'Deploy Using Run-From-Folder'
    inputs:
     azureSubscription: $(serviceConnection)
     scriptType: bash
     scriptLocation: inlineScript
     inlineScript: |
      # Extract the ZIP to a temporary folder
      unzip -o $(Pipeline.Workspace)/drop/app.zip -d $(Pipeline.Workspace)/extracted

      # Deploy extracted content to the wwwroot directory
      az webapp deployment source config-local-git --name $(appName) --resource-group $(resourceGroup) --manual-integration
      az webapp deployment list-publishing-profiles --name $(appName) --resource-group $(resourceGroup) --output table

      # Clear WEBSITE_RUN_FROM_PACKAGE if needed
      az webapp config appsettings set --name $(appName) --resource-group $(resourceGroup) --settings WEBSITE_RUN_FROM_PACKAGE=0